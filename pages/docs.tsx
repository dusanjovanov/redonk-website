import { NextPage } from "next";
import Head from "next/head";
import * as React from "react";
import styles from "../styles/Docs.module.css";

const Docs: NextPage = () => {
  return (
    <>
      <Head>
        <title>Redonk docs</title>
      </Head>
      <header>
        <svg
          width="33"
          height="40"
          viewBox="0 0 33 40"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.43359 30.9062C9.00391 32.4688 8.61328 33.6602 8.26172 34.4805C7.94922 35.2617 7.46094 36.082 6.79688 36.9414C6.28906 36.8633 5.9375 36.9219 5.74219 37.1172C5.54688 37.3125 5.33203 37.4883 5.09766 37.6445C4.74609 37.7227 4.49219 37.7227 4.33594 37.6445C4.17969 37.5664 4.04297 37.4688 3.92578 37.3516C3.80859 37.2734 3.65234 37.1758 3.45703 37.0586C3.30078 36.9805 3.04688 36.9414 2.69531 36.9414C2.61719 36.6289 2.51953 36.3359 2.40234 36.0625C2.32422 35.7891 2.07031 35.6914 1.64062 35.7695C1.71875 35.457 1.73828 35.2031 1.69922 35.0078C1.66016 34.7734 1.60156 34.5781 1.52344 34.4219C1.48438 34.2266 1.44531 34.0508 1.40625 33.8945C1.36719 33.6992 1.38672 33.4648 1.46484 33.1914C1.26953 33.1914 1.11328 33.0547 0.996094 32.7812C0.878906 32.5078 0.742188 32.2344 0.585938 31.9609C0.703125 31.2578 0.820312 30.5938 0.9375 29.9688C1.05469 29.3438 1.19141 28.7578 1.34766 28.2109C1.54297 27.6641 1.69922 27.1172 1.81641 26.5703C1.93359 26.0234 1.875 25.457 1.64062 24.8711C1.79688 24.9883 1.91406 24.9688 1.99219 24.8125C2.07031 24.6172 2.12891 24.3828 2.16797 24.1094C2.20703 23.7969 2.22656 23.5039 2.22656 23.2305C2.22656 22.918 2.20703 22.6641 2.16797 22.4688C2.55859 21.4531 2.87109 20.418 3.10547 19.3633C3.37891 18.2695 3.61328 17.1953 3.80859 16.1406C4.04297 15.0859 4.27734 14.0508 4.51172 13.0352C4.74609 12.0195 5.05859 11.082 5.44922 10.2227C5.87891 10.1445 6.34766 10.2031 6.85547 10.3984C7.40234 10.5547 7.73438 10.7695 7.85156 11.043C8.86719 10.2617 9.76562 9.32422 10.5469 8.23047C11.3281 7.09766 12.1289 6.00391 12.9492 4.94922C13.7695 3.89453 14.668 2.95703 15.6445 2.13672C16.6602 1.31641 17.9297 0.828125 19.4531 0.671875C20.2344 1.25781 21.0938 1.86328 22.0312 2.48828C23.0078 3.07422 23.8086 3.85547 24.4336 4.83203C24.7461 4.98828 25 5.16406 25.1953 5.35938C25.4297 5.51562 25.7031 5.69141 26.0156 5.88672V6.58984C26.4844 7.01953 26.8555 7.52734 27.1289 8.11328C27.4414 8.66016 27.7148 9.26562 27.9492 9.92969C28.1836 10.5547 28.418 11.1992 28.6523 11.8633C28.8867 12.4883 29.1602 13.0938 29.4727 13.6797C29.3945 13.875 29.3555 14.0508 29.3555 14.207C29.3555 14.3242 29.375 14.4609 29.4141 14.6172C29.4922 14.7734 29.5508 14.9297 29.5898 15.0859C29.6289 15.2422 29.6289 15.457 29.5898 15.7305C29.4727 17.4492 28.9062 18.8359 27.8906 19.8906C26.9141 20.9453 25.7227 21.8242 24.3164 22.5273C22.9102 23.1914 21.4062 23.7578 19.8047 24.2266C18.2031 24.6953 16.7578 25.2031 15.4688 25.75C15.4688 25.9062 15.5273 25.9844 15.6445 25.9844C15.8008 25.9844 15.8594 26.082 15.8203 26.2773C16.7578 26.8633 17.5 27.332 18.0469 27.6836C18.5938 28.0352 19.1016 28.3281 19.5703 28.5625C20.0781 28.7969 20.6055 29.0117 21.1523 29.207C21.7383 29.3633 22.5391 29.5586 23.5547 29.793C24.5703 30.0273 25.3516 30.2227 25.8984 30.3789C26.4844 30.4961 27.0117 30.6133 27.4805 30.7305C27.9492 30.8086 28.418 30.8867 28.8867 30.9648C29.3945 31.0039 30.0977 31.0625 30.9961 31.1406C31.3477 31.4922 31.6406 31.9219 31.875 32.4297C32.1484 32.8984 32.3242 33.3867 32.4023 33.8945C32.4805 34.3633 32.5 34.832 32.4609 35.3008C32.4219 35.7305 32.2852 36.082 32.0508 36.3555C32.0898 36.4727 32.168 36.5312 32.2852 36.5312C32.4414 36.4922 32.5977 36.4922 32.7539 36.5312C32.5195 36.6875 32.3242 36.8828 32.168 37.1172C32.0117 37.3516 31.8555 37.5859 31.6992 37.8203C31.543 38.0547 31.3672 38.25 31.1719 38.4062C30.9766 38.6016 30.7031 38.7188 30.3516 38.7578C29.1406 39.2266 27.6172 39.2461 25.7812 38.8164C23.9453 38.4258 21.6211 37.6836 18.8086 36.5898C17.4023 36.043 16.25 35.5742 15.3516 35.1836C14.4922 34.7539 13.7305 34.3438 13.0664 33.9531C12.4414 33.5234 11.8555 33.0742 11.3086 32.6055C10.8008 32.1367 10.1758 31.5703 9.43359 30.9062ZM17.8125 10.8086C17.3828 11.4336 16.8945 12 16.3477 12.5078C15.8398 13.0156 15.332 13.543 14.8242 14.0898C14.3555 14.5977 13.9258 15.1836 13.5352 15.8477C13.1445 16.4727 12.8711 17.2148 12.7148 18.0742C14.082 17.918 15.5078 17.5469 16.9922 16.9609C18.4766 16.3359 19.8828 15.75 21.2109 15.2031C21.0547 13.9922 20.625 13.0156 19.9219 12.2734C19.2578 11.5312 18.5547 11.043 17.8125 10.8086Z"
            fill="#007FFF"
          />
        </svg>
      </header>
    </>
  );
};

export default Docs;

const Tabs = () => {
  const [selectedTab, setSelectedTab] = React.useState(0);

  const isSelected = (index: number) => selectedTab === index;

  return (
    <div
      className={styles.tabs}
      role="tablist"
      aria-label="Usage examples tabs"
    >
      <button
        id="tab0"
        role="tab"
        className={styles.tab}
        tabIndex={isSelected(0) ? 0 : -1}
        aria-selected={isSelected(0) ? "true" : "false"}
        aria-controls="tabpanel0"
      >
        State management
      </button>
      <button
        id="tab1"
        role="tab"
        className={styles.tab}
        tabIndex={isSelected(1) ? 0 : -1}
        aria-selected={isSelected(1) ? "true" : "false"}
        aria-controls="tabpanel1"
      >
        Data fetching
      </button>
      <div id="tabpanel0" role="tabpanel" tabIndex={0} aria-labelledby="tab0">
        <h1>Panel 1</h1>
      </div>
      <div id="tabpanel1" role="tabpanel" tabIndex={0} aria-labelledby="tab1">
        <h1>Panel 2</h1>
      </div>
    </div>
  );
};
